{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar class=\\\"md-medium-tall\\\" color=\\\"warn\\\">\\n    <div class=\\\"mat-toolbar-tools\\\">\\n      <span layout-align=\\\"center center\\\"> Oracle CCOE Cloud Solution Tool</span>\\n      <span flex></span>\\n     </div>\\n</mat-toolbar>\\n\\n\\n<mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n      <form [formGroup]=\\\"firstFormGroup\\\">\\n        <ng-template matStepLabel>Partner information</ng-template>\\n        <mat-form-field>\\n            <mat-label>Partner Company Name</mat-label>\\n            <input matInput formControlName=\\\"companyName\\\" required>\\n            <mat-error>This field is required</mat-error>\\n          </mat-form-field>\\n          \\n              <mat-form-field>\\n                <mat-label>Oracle Partner Network ID</mat-label>\\n                <input matInput formControlName=\\\"partnerID\\\" required>\\n                <mat-error>This field is required</mat-error>\\n              </mat-form-field>\\n              <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n                  <tr>\\n                    <td>\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <mat-label>Type</mat-label>\\n                        <mat-select formControlName=\\\"type\\\" required>\\n                            <mat-option></mat-option>\\n                            <mat-option *ngFor=\\\"let typevalue of typesoptions\\\" [value]=\\\"typevalue\\\">{{typevalue}}</mat-option>\\n                        </mat-select> \\n                        <mat-error>This field is required</mat-error>\\n                      </mat-form-field>\\n                    </td>\\n                    <td>\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <mat-label>Target Persona</mat-label>\\n                            <mat-select formControlName=\\\"targetPersona\\\" required>\\n                                <mat-option> </mat-option>\\n                                <mat-option *ngFor=\\\"let targetpersona of targetpersonas\\\" [value]=\\\"targetpersona\\\">{{targetpersona}}</mat-option>\\n                            </mat-select> \\n                            <mat-error>This field is required</mat-error>\\n                          </mat-form-field> \\n                      \\n                    \\n                    </td>\\n       \\n                  </tr></table>\\n                  <mat-form-field>\\n                      <mat-label>Title</mat-label>\\n                      <input matInput formControlName=\\\"title\\\" required>\\n                      <mat-error>This field is required</mat-error>\\n                    </mat-form-field>\\n        \\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea matInput formControlName=\\\"overview\\\" placeholder=\\\"Overview/Features\\\" required></textarea>\\n                        <mat-error>This field is required</mat-error>\\n                      </mat-form-field>\\n        \\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                          <textarea matInput formControlName=\\\"elevatorPitch\\\" placeholder=\\\"Elevator Pitch\\\" required></textarea>\\n                          <mat-error>This field is required</mat-error>\\n                        </mat-form-field>\\n        \\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <textarea matInput formControlName=\\\"painpoints\\\" placeholder=\\\"Pain Points\\\" required></textarea>\\n                            <mat-error>This field is required</mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                              <textarea matInput formControlName=\\\"keymessages\\\" placeholder=\\\"Key Messages\\\" required></textarea>\\n                              <mat-error>This field is required</mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                              <textarea matInput formControlName=\\\"resources\\\" placeholder=\\\"Resources\\\" required></textarea>\\n                              <mat-error>This field is required</mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                              <textarea matInput formControlName=\\\"salesContact\\\" placeholder=\\\"Partner Sales Contact\\\" required></textarea>\\n                              <mat-error>This field is required</mat-error>\\n                          </mat-form-field>\\n                          <mat-form-field>\\n                          <mat-label>Industries</mat-label>\\n                              <mat-select formControlName=\\\"industries\\\"  multiple>\\n                                <mat-option *ngFor=\\\"let industry of industries\\\" [value]=\\\"industry\\\">{{industry}}</mat-option>\\n                              </mat-select>\\n                              <mat-error>This field is required</mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <mat-label>Products</mat-label>\\n                                <mat-select formControlName=\\\"products\\\"  multiple>\\n                                  <mat-option *ngFor=\\\"let product of products\\\" [value]=\\\"product\\\">{{product}}</mat-option>\\n                                </mat-select>\\n                                <mat-error>This field is required</mat-error>\\n                              </mat-form-field>\\n                              <mat-form-field>\\n                                  <mat-label>Tags</mat-label>\\n                                  <mat-select formControlName=\\\"tags\\\"  multiple >\\n                                    <mat-option *ngFor=\\\"let tagsvalue of tagoptions\\\" [value]=\\\"tagsvalue\\\">{{tagsvalue}}</mat-option>\\n                                  </mat-select>\\n                                  <mat-error>This field is required</mat-error>\\n                                </mat-form-field> \\n                                <mat-form-field>\\n                                    <mat-label>Markets</mat-label>\\n                                    <mat-select formControlName=\\\"markets\\\"  required >\\n                                      <mat-option *ngFor=\\\"let market of markets\\\" [value]=\\\"market\\\">{{market}}</mat-option>\\n                                    </mat-select>\\n                                    <mat-error>This field is required</mat-error>\\n                                  </mat-form-field> \\n                                  <mat-form-field class=\\\"example-full-width\\\">\\n                                      <textarea matInput formControlName=\\\"references\\\" placeholder=\\\"References\\\" required></textarea>\\n                                      <mat-error>This field is required</mat-error>\\n                                  </mat-form-field>\\n                                  <mat-form-field>\\n                                      <mat-label>Logo url</mat-label>\\n                                      <input matInput formControlName=\\\"logourl\\\" required>\\n                                      <mat-error>This field is required</mat-error>\\n                                    </mat-form-field>\\n         <div>\\n          <button class=\\\"btn-primary-spacing\\\" mat-raised-button matStepperNext color='warn'>Next</button>\\n        </div>\\n      </form>\\n\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n      <form [formGroup]=\\\"secondFormGroup\\\">\\n        <ng-template matStepLabel>Summary </ng-template>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n        </mat-form-field>\\n        <div>\\n          <button class=\\\"btn-primary-spacing\\\" mat-raised-button matStepperPrevious color='warn'>Back</button>\\n\\n          <button class=\\\"btn-primary-spacing\\\" mat-raised-button (click)=\\\"sendToJSON()\\\" color='warn'>Reset</button>\\n\\n          \\n        </div>\\n      </form>\\n    </mat-step>\\n    \\n  </mat-horizontal-stepper>\\n\\n\\n\\n\"","module.exports = \"mat-form-field {\\n    width: 100%;\\n  }\\n\\n  .tab-button-toggle-label {\\n    display: inline-block;\\n    margin: 16px;\\n  }\\n\\n  .example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n\\n  .example-full-width {\\n    width: 100%;\\n  }\\n\\n  td {\\n    padding-right: 8px;\\n  }\\n\\n  .btn-primary-spacing \\n{\\nmargin-right: 5px;\\nmargin-bottom: 5px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxxQkFBcUI7SUFDckIsWUFBWTtFQUNkOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7O0FBRUYsaUJBQWlCO0FBQ2pCLDZCQUE2QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLnRhYi1idXR0b24tdG9nZ2xlLWxhYmVsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luOiAxNnB4O1xuICB9XG4gIFxuICAuZXhhbXBsZS1mb3JtIHtcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICB0ZCB7XG4gICAgcGFkZGluZy1yaWdodDogOHB4O1xuICB9XG4gIFxuICAuYnRuLXByaW1hcnktc3BhY2luZyBcbntcbm1hcmdpbi1yaWdodDogNXB4O1xubWFyZ2luLWJvdHRvbTogNXB4ICFpbXBvcnRhbnQ7XG59Il19 */\"","\nimport {Component, OnInit } from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n\n  title = 'cloud-assessment-tool';\n\n  typesoptions: string[] = [\n    'Solution', 'Service', 'CSM Go-Live', 'POC'\n  ];\n\n  targetpersonas: string[] = ['Business', 'IT'];\n  industries: string[] = ['Aerospace & Defense', 'Automotive', 'Chemicals', 'Communications', 'Consumer Goods', 'Cross Industry' ];\n\n\n  products: string[] = ['API Catalog Cloud Service', 'API Platform', 'Analytics Cloud', 'Application Container',\n  'Application Performance Monitoring Cloud', 'BareMetal Compute/Storage/Network', 'Big Data Cloud', 'Big Data SQL Cloud Service',\n  'Blockchain Platform', 'Cloud Access Security Broker', 'Configuration and Compliance Cloud Service'\n\n];\n  tagoptions: string[] = ['Emerging Technology', 'Land, Use, Expand', 'Machine Learning' ];\n\n   markets: string[] = ['ECEMEA South - CIS', 'ECEMEA South - ECE, ECEMEA South - MEA, ECEMEA South - South', 'UKII North - ALPS',\n  'UKII North - Benelux' , 'UKII North - Germany' , 'UKII North - Nordics' , 'UKII North - UKII' ];\n\n\n  // formGroup: FormGroup;\n  isLinear = true;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n\n\n  /** Returns a FormArray with the name 'formArray'. */\n // get formArray(): AbstractControl | null { return this.formGroup.get('formArray'); }\n\n  // tslint:disable-next-line:variable-name\n  constructor(private _formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n   // this.formGroup = this._formBuilder.group({\n     // formArray: this._formBuilder.array([\n\n       this.firstFormGroup = this._formBuilder.group({\n          companyName: ['', Validators.required],\n          partnerID: ['', Validators.required],\n          type: ['', Validators.required],\n          targetPersona: ['', Validators.required],\n          title: ['', Validators.required],\n          overview: ['', Validators.required],\n          elevatorPitch: ['', Validators.required],\n          painpoints: ['', Validators.required],\n          keymessages: ['', Validators.required],\n          resources: ['', Validators.required],\n          salesContact: ['', Validators.required],\n          industries: ['', Validators.required],\n          products: ['', Validators.required],\n          tags: ['', Validators.required],\n          markets: ['', Validators.required],\n          references: ['', Validators.required],\n          logourl: ['', Validators.required]\n\n        });\n       this.secondFormGroup = this._formBuilder.group({\n          email: ['', Validators.email]\n        });\n      }\n\n      sendToJSON() {\n        const resource = JSON.stringify(this.firstFormGroup.value);\n        console.log('Submit Button clicked: ' + resource);\n\n\n      }\n\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport {MatButtonModule, MatCheckboxModule, MatIconModule, MatStepperModule, MatInputModule, MatFormFieldModule } from '@angular/material';\nimport { MatToolbarModule } from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { AngularDualListBoxModule } from 'angular-dual-listbox';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MatButtonModule, MatCheckboxModule, MatIconModule, MatStepperModule, MatFormFieldModule, MatInputModule,\n    BrowserAnimationsModule, MatToolbarModule,\n    FormsModule, ReactiveFormsModule, AngularDualListBoxModule, MatTabsModule, MatButtonToggleModule, MatSelectModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}