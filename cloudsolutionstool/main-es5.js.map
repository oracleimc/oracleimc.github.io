{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar class=\\\"md-medium-tall\\\" color=\\\"warn\\\">\\n        <div class=\\\"mat-toolbar-tools\\\">\\n          <span layout-align=\\\"center center\\\"> Oracle CCOE Cloud Solution Tool</span>\\n          <span flex></span>\\n         </div>\\n</mat-toolbar>\\n    <mat-tab-group>\\n    <mat-tab  label=\\\"Existing Solutions\\\">  \\n\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <!--mat-vertical-stepper #linearVerticalStepper=\\\"matVerticalStepper\\\" formArrayName=\\\"formArray\\\" [linear]=\\\"true\\\"-->\\n    <mat-horizontal-stepper formArrayName=\\\"formArray\\\" [linear]=\\\"true\\\">  \\n        \\n      <mat-step formGroupName=\\\"0\\\" [stepControl]=\\\"formArray?.get([0])\\\">\\n        \\n        <ng-template matStepLabel>\\n            <div>Partner information</div>\\n          </ng-template>\\n      <div>  \\n          \\n        <mat-form-field>\\n          <mat-label>Partner Company Name</mat-label>\\n          <input matInput formControlName=\\\"companyNameFormCtrl\\\" required>\\n          <mat-error>This field is required</mat-error>\\n        </mat-form-field>\\n      \\n      </div> \\n      <div>\\n        <mat-form-field>\\n          <mat-label>Oracle Partner Network ID</mat-label>\\n          <input matInput formControlName=\\\"partnerIDFormCtrl\\\" required>\\n          <mat-error>This field is required</mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n          <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <mat-label>Type</mat-label>\\n                  <mat-select formControlName=\\\"typeFormCtrl\\\" required>\\n                      <mat-option></mat-option>\\n                      <mat-option *ngFor=\\\"let typevalue of typesoptions\\\" [value]=\\\"typevalue\\\">{{typevalue}}</mat-option>\\n                  </mat-select> \\n                  <mat-error>This field is required</mat-error>\\n                </mat-form-field>\\n              </td>\\n              <td>\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                      <mat-label>Target Persona</mat-label>\\n                      <mat-select formControlName=\\\"targetPersonaFormCtrl\\\" required>\\n                          <mat-option> </mat-option>\\n                          <mat-option *ngFor=\\\"let targetpersona of targetpersonas\\\" [value]=\\\"targetpersona\\\">{{targetpersona}}</mat-option>\\n                      </mat-select> \\n                      <mat-error>This field is required</mat-error>\\n                    </mat-form-field> \\n                \\n              \\n              </td>\\n \\n            </tr></table>\\n      </div>\\n\\n        <div>\\n            <mat-form-field>\\n              <mat-label>Title</mat-label>\\n              <input matInput formControlName=\\\"titleFormCtrl\\\" required>\\n              <mat-error>This field is required</mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                  <textarea matInput formControlName=\\\"overviewFormCtrl\\\" placeholder=\\\"Overview/Features\\\" required></textarea>\\n                  <mat-error>This field is required</mat-error>\\n                </mat-form-field>\\n                \\n            </div>\\n            <div>\\n                \\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput formControlName=\\\"elevatorPitchFormCtrl\\\" placeholder=\\\"Elevator Pitch\\\" required></textarea>\\n                    <mat-error>This field is required</mat-error>\\n                  </mat-form-field>\\n           </div>\\n              <div>\\n             \\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                      <textarea matInput formControlName=\\\"painpointsFormCtrl\\\" placeholder=\\\"Pain Points\\\" required></textarea>\\n                      <mat-error>This field is required</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea matInput formControlName=\\\"keymessagesFormCtrl\\\" placeholder=\\\"Key Messages\\\" required></textarea>\\n                        <mat-error>This field is required</mat-error>\\n                    </mat-form-field>\\n\\n                  </div>\\n                  <div>\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                          <textarea matInput formControlName=\\\"resourcesFormCtrl\\\" placeholder=\\\"Resources\\\" required></textarea>\\n                          <mat-error>This field is required</mat-error>\\n                      </mat-form-field>\\n             \\n                    </div>\\n                    <div>\\n\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <textarea matInput formControlName=\\\"salesContactFormCtrl\\\" placeholder=\\\"Partner Sales Contact\\\" required></textarea>\\n                            <mat-error>This field is required</mat-error>\\n                        </mat-form-field>\\n                      </div>\\n                      <div>\\n\\n                          <mat-form-field>\\n                              <mat-label>Industries</mat-label>\\n                              <mat-select formControlName=\\\"industriesFormCtrl\\\"  multiple>\\n                                <mat-option *ngFor=\\\"let industry of industries\\\" [value]=\\\"industry\\\">{{industry}}</mat-option>\\n                              </mat-select>\\n                              <mat-error>This field is required</mat-error>\\n                            </mat-form-field>\\n\\n                        </div>\\n                        <div>\\n                            <mat-form-field>\\n                                <mat-label>Products</mat-label>\\n                                <mat-select formControlName=\\\"productsFormCtrl\\\"  multiple>\\n                                  <mat-option *ngFor=\\\"let product of products\\\" [value]=\\\"product\\\">{{product}}</mat-option>\\n                                </mat-select>\\n                                <mat-error>This field is required</mat-error>\\n                              </mat-form-field>\\n\\n                          </div>\\n                          <div>\\n                              <mat-form-field>\\n                                  <mat-label>Tags</mat-label>\\n                                  <mat-select formControlName=\\\"tagsFormCtrl\\\"  multiple >\\n                                    <mat-option *ngFor=\\\"let tagsvalue of tagoptions\\\" [value]=\\\"tagsvalue\\\">{{tagsvalue}}</mat-option>\\n                                  </mat-select>\\n                                  <mat-error>This field is required</mat-error>\\n                                </mat-form-field>  \\n                            \\n                          </div>\\n                          <div>\\n                              \\n\\n                                  <mat-form-field>\\n                                      <mat-label>Markets</mat-label>\\n                                      <mat-select formControlName=\\\"marketsFormCtrl\\\"  required >\\n                                        <mat-option *ngFor=\\\"let market of markets\\\" [value]=\\\"market\\\">{{market}}</mat-option>\\n                                      </mat-select>\\n                                      <mat-error>This field is required</mat-error>\\n                                    </mat-form-field> \\n\\n\\n                              </div>\\n                              <div>\\n\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\n                                      <textarea matInput formControlName=\\\"referencesFormCtrl\\\" placeholder=\\\"References\\\" required></textarea>\\n                                      <mat-error>This field is required</mat-error>\\n                                  </mat-form-field>\\n                                </div>\\n  \\n                                <div>\\n                                    <mat-form-field>\\n                                      <mat-label>Logo url</mat-label>\\n                                      <input matInput formControlName=\\\"logourlFormCtrl\\\" required>\\n                                      <mat-error>This field is required</mat-error>\\n                                    </mat-form-field>\\n                                  </div>\\n  \\n  \\n  \\n        <div>\\n          <button mat-raised-button matStepperNext color='warn' >Next</button>\\n        </div>\\n      </mat-step>\\n\\n      <mat-step formGroupName=\\\"1\\\" [stepControl]=\\\"formArray?.get([1])\\\">\\n        <ng-template matStepLabel>\\n          <div>Confirm your information</div>\\n        </ng-template>\\n        <mat-form-field>\\n          <mat-label>Email address</mat-label>\\n          <input matInput formControlName=\\\"emailFormCtrl\\\">\\n          <mat-error>The input is invalid.</mat-error>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button type=\\\"button\\\" mat-button (click)=\\\"linearVerticalStepper.reset()\\\">Reset</button>\\n          <button mat-button matStepperNext>Done</button>\\n        </div>\\n      </mat-step>\\n  <!--\\n      <mat-step>\\n        <ng-template matStepLabel>Confirm your information</ng-template>\\n        Everything seems correct.\\n        <div>\\n          <button mat-button>Done</button>\\n          <button type=\\\"button\\\" mat-button (click)=\\\"linearVerticalStepper.reset()\\\">Reset</button>\\n        </div>\\n      </mat-step>\\n\\n    -->  \\n    <!--/mat-vertical-stepper-->\\n  </mat-horizontal-stepper>\\n  </form>\\n  \\n</mat-tab>\\n\\n<mat-tab label=\\\"Assessment Tool for New Solutions\\\"> \\n    \\n\\n\\n  \\n</mat-tab>\\n</mat-tab-group>  \\n  \\n  \\n  \\n\\n\\n\\n\"","module.exports = \"mat-form-field {\\n    width: 100%;\\n  }\\n\\n  .tab-button-toggle-label {\\n    display: inline-block;\\n    margin: 16px;\\n  }\\n\\n  .example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n\\n  .example-full-width {\\n    width: 100%;\\n  }\\n\\n  td {\\n    padding-right: 8px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxxQkFBcUI7SUFDckIsWUFBWTtFQUNkOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC50YWItYnV0dG9uLXRvZ2dsZS1sYWJlbCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMTZweDtcbiAgfVxuICBcbiAgLmV4YW1wbGUtZm9ybSB7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgdGQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcbiAgfVxuICAiXX0= */\"","\nimport {Component, OnInit } from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'cloud-assessment-tool';\n \n  typesoptions: string[] = [\n    'Solution', 'Service', 'CSM Go-Live', 'POC'\n  ];\n\n  targetpersonas: string[] = ['Business', 'IT'];\n  industries: string[] = ['Aerospace & Defense', 'Automotive', 'Chemicals', 'Communications', 'Consumer Goods', 'Cross Industry' ];\n  \n\n  products: string[] = ['API Catalog Cloud Service', 'API Platform', 'Analytics Cloud', 'Application Container', \n  'Application Performance Monitoring Cloud', 'BareMetal Compute/Storage/Network','Big Data Cloud', 'Big Data SQL Cloud Service',\n  'Blockchain Platform', 'Cloud Access Security Broker', 'Configuration and Compliance Cloud Service'\n\n];\n  tagoptions: string[] = ['Emerging Technology', 'Land, Use, Expand', 'Machine Learning' ];\n  \n   markets: string[] = ['ECEMEA South - CIS', 'ECEMEA South - ECE, ECEMEA South - MEA, ECEMEA South - South', 'UKII North - ALPS',\n  'UKII North - Benelux' , 'UKII North - Germany' , 'UKII North - Nordics' , 'UKII North - UKII' ];\n\n\n  fruits: Array<string> = ['apple', 'pear', 'kiwi', 'banana', 'grape', 'strawberry', 'grapefruit', 'melon', 'mango', 'plum'];\n\n  source = [ 'Pawn', 'Rook', 'Knight', 'Bishop', 'Queen', 'King' ];\n\ttarget = [];\n\n  formGroup: FormGroup;\n\n  steps = [\n    {label: 'Confirm your name', content: 'Last name, First name.'},\n    {label: 'Confirm your contact information', content: '123-456-7890'},\n    {label: 'Confirm your address', content: '1600 Amphitheater Pkwy MTV'},\n    {label: 'You are now done', content: 'Finished!'}\n  ];\n\n  /** Returns a FormArray with the name 'formArray'. */\n  get formArray(): AbstractControl | null { return this.formGroup.get('formArray'); }\n\n  // tslint:disable-next-line:variable-name\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.formGroup = this._formBuilder.group({\n      formArray: this._formBuilder.array([\n        this._formBuilder.group({\n          companyNameFormCtrl: ['', Validators.required],\n          partnerIDFormCtrl: ['', Validators.required],\n          typeFormCtrl: ['', Validators.required],\n          targetPersonaFormCtrl: ['', Validators.required],\n          fyFormCtrl: ['', Validators.required],\n          titleFormCtrl: ['', Validators.required],\n          overviewFormCtrl: ['', Validators.required],\n          elevatorPitchFormCtrl: ['', Validators.required],\n          painpointsFormCtrl: ['', Validators.required],\n          keymessagesFormCtrl: ['', Validators.required],\n          resourcesFormCtrl: ['', Validators.required],\n          salesContactFormCtrl: ['', Validators.required],\n          industriesFormCtrl: ['', Validators.required],\n          productsFormCtrl: ['', Validators.required],\n          tagsFormCtrl: ['', Validators.required],\n          marketsFormCtrl: ['', Validators.required],\n          referencesFormCtrl: ['', Validators.required],\n          logourlFormCtrl: ['', Validators.required],\n\n        }),\n        this._formBuilder.group({\n          emailFormCtrl: ['', Validators.email]\n        }),\n      ])\n    });\n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport {MatButtonModule, MatCheckboxModule, MatIconModule, MatStepperModule, MatInputModule, MatFormFieldModule } from '@angular/material';\nimport { MatToolbarModule } from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { AngularDualListBoxModule } from 'angular-dual-listbox';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MatButtonModule, MatCheckboxModule, MatIconModule, MatStepperModule, MatFormFieldModule, MatInputModule,\n    BrowserAnimationsModule, MatToolbarModule,\n    FormsModule, ReactiveFormsModule, AngularDualListBoxModule, MatTabsModule, MatButtonToggleModule, MatSelectModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}